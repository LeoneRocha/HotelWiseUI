------------------ MELHORAR LAYOUT 


 

- [System]: Você é um assistente especializado em reservas de hotel.
- [User]: Quais são os melhores hotéis perto de São Paulo?
- [Assistant]: Aqui estão os melhores hotéis perto de você: Hotel X, Hotel Y, Hotel Z.



https://dev.to/vitorrios1001/implementando-testes-com-jest-em-projetos-react-typescript-2j2


https://medium.com/@abhishekpn98/setup-jest-in-a-typescript-react-project-cfb8188534ec

https://dev.to/hannahadora/jest-testing-with-vite-and-react-typescript-4bap

https://www.alura.com.br/artigos/testes-automatizados-react-typescript?srsltid=AfmBOop-06xUHKuf80_vGokZkNpPQApsWOC-n3DXgZJyWxSne9bGk3A8

https://dev.to/bajajcodes/mastering-jest-configuration-for-react-typescript-projects-with-vite-a-step-by-step-guide-4k4b

npm install --save-dev @testing-library/react @testing-library/jest-dom @testing-library/dom @testing-library/user-event


npm install --save-dev jest jest-environment-jsdom ts-jest @types/jest


npm install --save-dev @testing-library/jest-dom


npm install --save-dev jest @testing-library/react @testing-library/jest-dom ts-jest



npm install --save-dev jest-junit


instalar o  jest-html-reporter para react typscript


npm install --save-dev vite-jest
npm install --save-dev vite-plugin-environment




npm run build:prod

npm run dev

npm run test


dentificar Dependências Conflitantes:

O problema está entre jest e vite-jest. jest@29.7.0 é encontrado, mas vite-jest@0.1.4 requer jest@"^27.0.0".

Solução 1: Forçar a instalação com --legacy-peer-deps:

Adicione a seguinte linha no seu arquivo YAML da pipeline para forçar a instalação:

yaml


// Mock do arquivo CSS para evitar problemas durante o teste
jest.mock('../css/HotelList.css', () => ({}));

  beforeEach(() => {
        jest.clearAllMocks();
        // Mock do console.warn para suprimir os avisos durante os testes
        jest.spyOn(console, 'warn').mockImplementation(() => { });
    });
 

Gere test jest para esse componente em react typescript, gere apenas 1 teste simples 

import React from 'react';
import { useLocation } from 'react-router-dom';
import './App.css';
import Navbar from './components/Navbar';
import AppRoutes from './routes';
import HeaderPage from './components/HeaderPage';
import FooterPage from './FooterPage';
import LocalStorageService from './services/localStorageService';
import CookieConsent from './components/CookieConsent';

const SinglePage: React.FC = () => {
    const location = useLocation();
    const showNavbar = isLoggedIn() && location.pathname !== '/';
    const showTitle = location.pathname !== '/';
    return (
        <div className="container-fluid p-0">
            {showTitle && <HeaderPage />}
            {showNavbar && <Navbar />}
            <main>
                <AppRoutes />
            </main>
            {/* Renderizar o CookieConsent apenas nas rotas / e /login */}
            {window.location.pathname === '/' || window.location.pathname === '/login' ? <CookieConsent /> : null}
            <FooterPage />
        </div>
    );
};

const isLoggedIn = (): boolean => {
    return LocalStorageService.hasItem('token');
};

export default SinglePage;